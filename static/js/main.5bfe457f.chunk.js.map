{"version":3,"sources":["store/actions/actions.js","components/Link/link.js","containers/FilterLink/FilterLink.js","components/Footer/footer.js","containers/AddTodo/AddTodo.js","components/Todo/todo.js","components/Todolist/todolist.js","containers/VisibleTodoList/VisibleTodoList.js","App.js","store/reducers/reducers.js","store/store.js","index.js"],"names":["VisibilityFilters","nextTodoId","Link","active","children","onClick","disabled","style","marginleft","connect","state","ownProps","filter","visibilityFilter","dispatch","type","Footer","FilterLink","input","onSubmit","e","text","preventDefault","value","trim","id","ref","node","Todo","completed","listStyle","textDecoration","Todolist","todos","toggleTodo","map","todo","getVisibleTodos","t","Error","App","className","VisibleTodoList","todoApp","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bfe457f.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO'\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\r\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER'\r\n\r\nexport const VisibilityFilters = {\r\n    SHOW_ALL: 'SHOW_ALL',\r\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}\r\n\r\nlet nextTodoId = 0\r\nexport const addTodo = text => ({\r\n    type: ADD_TODO,\r\n    id: nextTodoId++,\r\n    text: text\r\n})\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n    type: SET_VISIBILITY_FILTER,\r\n    filter\r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n    type: TOGGLE_TODO,\r\n    id: id\r\n})","const Link = ({ active, children, onClick }) => (\r\n    <button\r\n        onClick={onClick}\r\n        disabled={active}\r\n        style={{\r\n            marginleft: '4px'\r\n        }}\r\n    >\r\n        {children}\r\n    </button>\r\n)\r\n\r\nexport default Link;","import { connect } from \"react-redux\";\r\nimport { setVisibilityFilter } from \"../../store/actions/actions\";\r\nimport Link from \"../../components/Link/link\";\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        active: ownProps.filter === state.visibilityFilter\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        onClick: () => {\r\n            dispatch(setVisibilityFilter(ownProps.filter))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Link);","import FilterLink from '../../containers/FilterLink/FilterLink'\r\nimport { VisibilityFilters } from '../../store/actions/actions'\r\n\r\nconst Footer = () => (\r\n    <div>\r\n        <span>Show: </span>\r\n        <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\r\n        <FilterLink filter={VisibilityFilters.SHOW_ACTIVE} >Active</FilterLink>\r\n        <FilterLink filter={VisibilityFilters.SHOW_COMPLETED} >Completed</FilterLink>\r\n    </div>\r\n)\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addTodo } from '../../store/actions/actions';\r\n\r\nlet AddTodo = ({dispatch}) => { \r\n    let input;\r\n\r\n    return (\r\n        <div>\r\n            <form\r\n            onSubmit={e => {\r\n                e.preventDefault()\r\n                if (!input.value.trim()) {\r\n                    return\r\n                }\r\n                dispatch(addTodo(input.value))\r\n                input.value = ''\r\n            }}\r\n        >\r\n                <input ref={node => (input = node)} />\r\n                <button type=\"submit\">Add Todo</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(AddTodo);","import React from 'react';\r\n\r\nconst Todo = ({ onClick, completed, text }) => (\r\n    <li\r\n    onClick = {onClick}\r\n    style = {{\r\n        listStyle: 'none',\r\n        textDecoration: completed ? 'line-through':'none'\r\n    }}\r\n    >\r\n        {text}\r\n    </li>\r\n)\r\n\r\nexport default Todo;","import Todo from \"../Todo/todo\";\r\n\r\nconst Todolist = ({todos, toggleTodo}) => (\r\n    <ul>\r\n        {todos.map(todo => ( \r\n            <Todo key={todo.id}\r\n            {...todo}\r\n            onClick={() => toggleTodo(todo.id)}\r\n            />\r\n        ))}\r\n    </ul>\r\n)\r\n\r\nexport default Todolist;","import { connect } from \"react-redux\";\r\nimport { toggleTodo } from \"../../store/actions/actions\";\r\nimport Todolist from \"../../components/Todolist/todolist\";\r\nimport { VisibilityFilters } from \"../../store/actions/actions\";\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n    switch (filter) {\r\n        case VisibilityFilters.SHOW_ALL:\r\n            return todos\r\n        case VisibilityFilters.SHOW_COMPLETED:\r\n            return todos.filter(t => t.completed)\r\n        case VisibilityFilters.SHOW_ACTIVE:\r\n            return todos.filter(t => !t.completed)\r\n        default:\r\n            throw new Error('Unknown filter: '+ filter)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    todos: getVisibleTodos(state.todos, state.visibilityFilter)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleTodo: id => dispatch(toggleTodo(id))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Todolist)","import './App.css';\n\nimport Footer from './components/Footer/footer'\nimport AddTodo from './containers/AddTodo/AddTodo'\nimport VisibleTodoList from './containers/VisibleTodoList/VisibleTodoList'\n\nexport default function App() {\n    return (\n        <div className=\"app\">\n            <h1>Let's do it</h1>\n            <div id=\"divBlock\">\n            <AddTodo />\n            <VisibleTodoList />\n            <Footer />\n            </div>\n        </div>\n    )\n\n}","import { combineReducers } from \"redux\";\r\nimport {\r\n    ADD_TODO,\r\n    TOGGLE_TODO,\r\n    SET_VISIBILITY_FILTER,\r\n    VisibilityFilters\r\n} from '../actions/actions';\r\n\r\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\r\n    switch (action.type) {\r\n        case 'SET_VISIBILITY_FILTER':\r\n            return action.filter\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst todos = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TODO':\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: action.id,\r\n                    text: action.text,\r\n                    completed: false\r\n                }\r\n            ]\r\n          case 'TOGGLE_TODO':\r\n            return state.map(todo => \r\n                todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n            )\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst todoApp = combineReducers({\r\n    visibilityFilter,\r\n    todos\r\n})\r\n\r\nexport default todoApp","import { createStore } from \"redux\";\r\nimport todoApp from \"./reducers/reducers\";\r\n\r\nexport let store = createStore(todoApp); ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider} from 'react-redux'\nimport { store } from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}